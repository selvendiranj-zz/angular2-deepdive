"use strict";
const webpack = require("webpack");
const TsConfigPathsPlugin = require('awesome-typescript-loader').TsConfigPathsPlugin;
function getWebpackConfig(config) {
    return {
        devtool: 'source-map',
        resolve: {
            extensions: ['.ts', '.js']
        },
        entry: config.entry,
        output: {
            path: config.output,
            publicPath: '/',
            filename: `${config.name}.js`,
            libraryTarget: 'umd',
            library: config.name
        },
        // require those dependencies but don't bundle them
        externals: [/^\@angular\//, /^rxjs\//],
        module: {
            rules: [
                {
                    test: /\.ts$/,
                    loader: `awesome-typescript-loader`,
                    exclude: [/\.e2e\.ts$/],
                    query: {
                        compilerOptions: {
                            declaration: false
                        },
                        configFileName: config.tsconfig
                    }
                },
                // in main, load css as raw text
                {
                    // exclude: styles,
                    test: /\.css$/,
                    loaders: ['raw-loader', 'postcss-loader']
                }, {
                    // exclude: styles,
                    test: /\.styl$/,
                    loaders: ['raw-loader', 'postcss-loader', 'stylus-loader']
                },
                {
                    // exclude: styles,
                    test: /\.less$/,
                    loaders: ['raw-loader', 'postcss-loader', 'less-loader']
                }, {
                    // exclude: styles,
                    test: /\.scss$|\.sass$/,
                    loaders: ['raw-loader', 'postcss-loader', 'sass-loader']
                }
            ]
        },
        plugins: [
            new TsConfigPathsPlugin(),
            // fix the warning in ./~/@angular/core/src/linker/system_js_ng_module_factory_loader.js
            new webpack.ContextReplacementPlugin(/angular(\\|\/)core(\\|\/)(esm(\\|\/)src|src)(\\|\/)linker/, config.root)
        ],
        // Hide webpack output because its noisy.
        // noInfo: true,
        // Also prevent chunk and module display output, cleaner look. Only emit errors.
        stats: 'errors-only',
        devServer: {
            stats: 'errors-only'
        },
    };
}
exports.getWebpackConfig = getWebpackConfig;
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2VicGFjay11bWQuY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL25nbS9tb2RlbHMvd2VicGFjay11bWQuY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxtQ0FBb0M7QUFDcEMsTUFBTyxtQkFBbUIsR0FBRyxPQUFPLENBQUMsMkJBQTJCLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQztBQUV0RiwwQkFBaUMsTUFBTTtJQUNyQyxNQUFNLENBQUM7UUFDTCxPQUFPLEVBQUUsWUFBWTtRQUVyQixPQUFPLEVBQUU7WUFDUCxVQUFVLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDO1NBQzNCO1FBRUQsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLO1FBRW5CLE1BQU0sRUFBRTtZQUNOLElBQUksRUFBRSxNQUFNLENBQUMsTUFBTTtZQUNuQixVQUFVLEVBQUUsR0FBRztZQUNmLFFBQVEsRUFBRSxHQUFHLE1BQU0sQ0FBQyxJQUFJLEtBQUs7WUFDN0IsYUFBYSxFQUFFLEtBQUs7WUFDcEIsT0FBTyxFQUFFLE1BQU0sQ0FBQyxJQUFJO1NBQ3JCO1FBRUQsbURBQW1EO1FBQ25ELFNBQVMsRUFBRSxDQUFDLGNBQWMsRUFBRSxTQUFTLENBQUM7UUFFdEMsTUFBTSxFQUFFO1lBQ04sS0FBSyxFQUFFO2dCQUNMO29CQUNFLElBQUksRUFBRSxPQUFPO29CQUNiLE1BQU0sRUFBRSwyQkFBMkI7b0JBQ25DLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztvQkFDdkIsS0FBSyxFQUFFO3dCQUNMLGVBQWUsRUFBRTs0QkFDZixXQUFXLEVBQUUsS0FBSzt5QkFDbkI7d0JBQ0QsY0FBYyxFQUFFLE1BQU0sQ0FBQyxRQUFRO3FCQUNoQztpQkFDRjtnQkFDRCxnQ0FBZ0M7Z0JBQ2hDO29CQUNFLG1CQUFtQjtvQkFDbkIsSUFBSSxFQUFFLFFBQVE7b0JBQ2QsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLGdCQUFnQixDQUFDO2lCQUMxQyxFQUFFO29CQUNELG1CQUFtQjtvQkFDbkIsSUFBSSxFQUFFLFNBQVM7b0JBQ2YsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLGdCQUFnQixFQUFFLGVBQWUsQ0FBQztpQkFDM0Q7Z0JBQ0Q7b0JBQ0UsbUJBQW1CO29CQUNuQixJQUFJLEVBQUUsU0FBUztvQkFDZixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxDQUFDO2lCQUN6RCxFQUFFO29CQUNELG1CQUFtQjtvQkFDbkIsSUFBSSxFQUFFLGlCQUFpQjtvQkFDdkIsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLGdCQUFnQixFQUFFLGFBQWEsQ0FBQztpQkFDekQ7YUFDRjtTQUNGO1FBRUQsT0FBTyxFQUFFO1lBQ1AsSUFBSSxtQkFBbUIsRUFBRTtZQUN6Qix3RkFBd0Y7WUFDeEYsSUFBSSxPQUFPLENBQUMsd0JBQXdCLENBQ2xDLDJEQUEyRCxFQUMzRCxNQUFNLENBQUMsSUFBSSxDQUNaO1NBQ0Y7UUFDRCx5Q0FBeUM7UUFDekMsZ0JBQWdCO1FBQ2hCLGdGQUFnRjtRQUNoRixLQUFLLEVBQUUsYUFBYTtRQUNwQixTQUFTLEVBQUU7WUFDVCxLQUFLLEVBQUUsYUFBYTtTQUNyQjtLQUNGLENBQUM7QUFDSixDQUFDO0FBeEVELDRDQXdFQztBQUFBLENBQUMifQ==