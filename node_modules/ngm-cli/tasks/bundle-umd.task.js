"use strict";
const path = require("path");
const npm_submodules_1 = require("npm-submodules");
const webpack_umd_config_1 = require("../models/webpack-umd.config");
const webpack = require('webpack');
// todo: move to constants and make it configurable
const bundlesDir = 'bundles';
// Configure build and output;
let lastHash = null;
const webpackOutputOptions = {
    colors: true,
    chunks: true,
    modules: false,
    reasons: false,
    chunkModules: false
};
// export function bundleUmd(dir, moduleConf, minify) {
function bundleUmd({ src, dist, name, main, tsconfig, minify }) {
    const config = webpack_umd_config_1.getWebpackConfig({
        name: !minify ? `${name}.umd` : `${name}.umd.min`,
        root: path.resolve(npm_submodules_1.ROOT, src),
        entry: path.resolve(npm_submodules_1.ROOT, src, main),
        output: path.resolve(dist, bundlesDir),
        tsconfig: tsconfig
    });
    if (minify) {
        config.plugins.unshift(new webpack.optimize.UglifyJsPlugin({
            compress: {
                warnings: false
            }
        }));
    }
    const webpackCompiler = webpack(config);
    const ProgressPlugin = require('webpack/lib/ProgressPlugin');
    webpackCompiler.apply(new ProgressPlugin({ profile: false }));
    return new Promise((resolve, reject) => {
        webpackCompiler.run((err, stats) => {
            if (err) {
                if (stats) {
                    process.stdout.write(stats.toString(webpackOutputOptions) + '\n');
                }
                return reject(err);
            }
            if (stats.hasErrors()) {
                process.stdout.write(stats.toString(webpackOutputOptions) + '\n');
            }
            return stats.hasErrors() ? reject() : resolve();
        });
    });
}
exports.bundleUmd = bundleUmd;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLXVtZC50YXNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL25nbS90YXNrcy9idW5kbGUtdW1kLnRhc2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLDZCQUE4QjtBQUM5QixtREFBc0M7QUFDdEMscUVBQWdFO0FBQ2hFLE1BQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUVuQyxtREFBbUQ7QUFDbkQsTUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFDO0FBRTdCLDhCQUE4QjtBQUM5QixJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUM7QUFDcEIsTUFBTSxvQkFBb0IsR0FBRztJQUMzQixNQUFNLEVBQUUsSUFBSTtJQUNaLE1BQU0sRUFBRSxJQUFJO0lBQ1osT0FBTyxFQUFFLEtBQUs7SUFDZCxPQUFPLEVBQUUsS0FBSztJQUNkLFlBQVksRUFBRSxLQUFLO0NBQ3BCLENBQUM7QUFFRix1REFBdUQ7QUFDdkQsbUJBQTBCLEVBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUM7SUFDakUsTUFBTSxNQUFNLEdBQUcscUNBQWdCLENBQUM7UUFDOUIsSUFBSSxFQUFFLENBQUMsTUFBTSxHQUFHLEdBQUcsSUFBSSxNQUFNLEdBQUcsR0FBRyxJQUFJLFVBQVU7UUFDakQsSUFBSSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMscUJBQUksRUFBRSxHQUFHLENBQUM7UUFDN0IsS0FBSyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMscUJBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDO1FBQ3BDLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxVQUFVLENBQUM7UUFDdEMsUUFBUSxFQUFFLFFBQVE7S0FDbkIsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUNYLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUM7WUFDekQsUUFBUSxFQUFFO2dCQUNSLFFBQVEsRUFBRSxLQUFLO2FBQ2hCO1NBQ0YsQ0FBQyxDQUFDLENBQUM7SUFDTixDQUFDO0lBRUQsTUFBTSxlQUFlLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRXhDLE1BQU0sY0FBYyxHQUFHLE9BQU8sQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0lBRTdELGVBQWUsQ0FBQyxLQUFLLENBQUMsSUFBSSxjQUFjLENBQUMsRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTVELE1BQU0sQ0FBQyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNO1FBQ2pDLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSztZQUM3QixFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUNSLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7b0JBQ1YsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO2dCQUNwRSxDQUFDO2dCQUNELE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsQ0FBQztZQUVELEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3RCLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsb0JBQW9CLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztZQUNwRSxDQUFDO1lBRUQsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsR0FBRyxNQUFNLEVBQUUsR0FBRyxPQUFPLEVBQUUsQ0FBQztRQUNsRCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQXZDRCw4QkF1Q0MifQ==